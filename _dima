    "Window operations
  "vertical resize by 2 lines
map <M-=> <C-W>2+
map <M--> <C-W>2-
  "horizontal resize by 2 digits
map <M-.> <C-w>2>
map <M-,> <C-w>2<

let NERDTreeWinSize=41
let NERDTreeChDirMode=2

cnoremap \pt <C-R>=expand("%:h")<CR>
nmap T :e \pt

    "Folding
set nofoldenable
"set foldmethod=marker
"set foldmarker={,}
"set foldnestmax=1
map zh :foldclose<CR>
map zl :foldopen<CR>
"add new line before each {
map zJ :%s/)\s*{/)\r{/g<CR>
"show javascript functions in outline view
map <F12> :TToC \(\w\+\s=\sfunction(.*)\)\\|\(\(function\)\@<=.*\)<CR>

  "Diff
set diffopt=filler
"ignore whitespaces
set diffopt+=iwhite
"always open horizontal diffsplit
set diffopt+=horizontal
" Catch the transition to diff mode
au FilterWritePre * if &diff | exe 'noremap <space> ]c' | exe 'noremap <S-space> [c' | endif
au FilterWritePre * if &diff | exe 'set diffopt=filler,context:1000' |

  "Functions

"all project files merged in one by script for fast search
"this jump command set cursor in origin file
nmap ge :call EDITSOURCE()<CR>

function! EDITSOURCE()
  let position = getpos(".")
  let endLine = position[1]
  let flags = "be"
  call search("File:", flags)
  let startLine = line(".")
  let lineN = endLine - startLine - 1 
  call setpos(".", [0, startLine, 9,0])
  edit <cfile>
  call setpos(".", [0, lineN, position[2] ,0])
endfunction

"there are several main locations in daily use
map <F8> <esc>:call SWITCHLOCATION()<cr>
function! SWITCHLOCATION()
  "let paths = ['D:\CME\Source\Tridion.Web.UI\Tridion.Web.UI.Core', , 'D:\SE\Source\SiteEditSolution\Tridion.Web.UI.Editors.SiteEdit']
  let currentPath = getcwd()
  "get index of currentPath in array;
  "get element with index++ divided without rest on array size
  let path_0 = 'D:\SE\Source\SiteEditSolution\Tridion.Web.UI.Editors.SiteEdit'
  let path_1 = 'D:\CME\Source\Tridion.Web.UI\Tridion.Web.UI.Core'
  let path_2 = 'D:\CME\Source\Tridion.Web.UI.Editors\CME2011\Tridion.Web.UI.Editors.CME'
  let $CHANGEPATH = path_0
  let j = 0
  while j < 2
    let entry = 'path_' . j
    if currentPath == {entry}
      "if j is a last element
    if j == 2
      let i = 0
    else
      let i = j + 1
    endif
    let entry = 'path_' . i
    let $CHANGEPATH = {entry}
    endif
    let j = j + 1
  endwhile
  :cd $CHANGEPATH
  :NERDTree $CHANGEPATH
  :pwd
endfunction

"map <F5>  <esc>:call SWITCHFOLD()<cr>
function! SWITCHFOLD()
    if &foldmethod=="marker"
        set foldmethod=syntax
        return
    endif
    if &foldmethod=="syntax"
    set foldmethod=marker
    return
  endif
" set foldmethod=syntax
" set foldmethod=marker
endfunction

  "Regexp notes
"/text1\(text2\)\@= 'text1' followed by 'text2'
"/\(text1\)\@<=text2  'text2' preceded with 'text1'
"
"search items nearby (multiline)
"word\_.{-}word2
